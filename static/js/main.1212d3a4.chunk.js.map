{"version":3,"sources":["components/CardItem.js","actions/cardsActions.js","components/common/AddElementForm.js","actions/listActions.js","components/common/AddElementButton.js","components/List.js","layout/App.js","serviceWorker.js","reducers/boardReducer.js","store/configureStore.js","index.js"],"names":["CardContainer","styled","div","EditButton","Icon","DeleteButton","connect","text","cardId","index","dispatch","listId","useState","editing","setEditing","cardText","setCardText","handleDeleteCard","type","payload","deleteCard","handleEdit","editCard","style","paddingTop","marginBottom","Card","onBlur","overflow","minHeight","minWidth","padding","TextareaAutosize","autoFocus","value","onChange","e","target","resize","width","outline","border","fontSize","marginTop","display","alignItems","Button","variant","disabled","onMouseDown","color","cursor","marginLeft","onClick","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","CardContent","Typography","gutterBottom","element","buttonTitle","placeholder","elementText","setElementText","textareaRef","useRef","fontWeight","preventDefault","addCard","current","blur","handleSubmit","AddButtonContainer","AddElementButton","formOpen","setFormOpen","ListContainer","TitleContainer","ListButton","title","cards","listTitle","setListTitle","handleDeleteList","deleteList","editList","droppableId","justifyContent","paddingBottom","droppableProps","map","card","key","id","AllListContainer","state","board","onDragEnd","result","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","destination","source","sortList","direction","list","Boolean","window","location","hostname","match","initialState","uuid","boardReducer","action","newList","newCard","newState","splice","find","startList","endList","filter","persistedState","serializedState","localStorage","getItem","JSON","parse","error","console","log","loadState","store","createStore","combineReducers","__REDUX_DEVTOOLS_EXTENSION__","subscribe","stringify","setItem","saveState","getState","Store","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.1212d3a4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Card, Typography, CardContent, TextareaAutosize, Button } from '@material-ui/core';\nimport { Draggable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport Icon from '@material-ui/core/Icon';\nimport { deleteCard, editCard } from '../actions/cardsActions';\nimport { connect } from 'react-redux';\n\nconst CardContainer = styled.div `\n  padding-bottom: 4px;\n  padding-top: 4px;\n  position: relative;\n  max-width: 100%;\n  word-wrap: break-word;\n`;\n\nconst EditButton = styled(Icon)`\n  position: absolute;\n  display: none;\n  right: 5px;\n  top: 13px;\n  opacity: 0.3;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst DeleteButton = styled(Icon)`\n  position: absolute;\n  display: none;\n  right: 5px;\n  bottom: 13px;\n  opacity: 0.3;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst CardItem = ({text, cardId, index, dispatch, listId}) => {\n\n  const [editing, setEditing] = useState(false);\n  const [cardText, setCardText] = useState('');\n\n  const handleDeleteCard = () => {\n    dispatch(deleteCard(listId, cardId));\n  }\n\n  const handleEdit = () => {\n    dispatch(editCard(listId, cardId, cardText));\n    setEditing(false);\n    setCardText('');\n  }\n\n  const renderEditInput = () => (\n    <div style={{paddingTop: 4, marginBottom: 8}}>\n      <Card \n        onBlur={() => setEditing(false)} \n        style={{\n          overflow: 'visible',\n          minHeight: 80,\n          minWidth: 266,\n          padding: '6px 8px 2px'\n        }}\n      >\n        <TextareaAutosize\n          autoFocus\n          value={cardText}\n          onChange={e => setCardText(e.target.value)}\n          style={{\n            resize: 'none',\n            width: '100%',\n            overflow: 'hidden',\n            outline: 'none',\n            border: 'none',\n            fontSize: 15,\n          }}\n        />\n      </Card>\n      <div style={{marginTop: 8, display: 'flex', alignItems: 'center'}}>\n        <Button\n          variant='contained'\n          disabled={!!!cardText}\n          onMouseDown={handleEdit}\n          color='primary'\n        >\n          Save\n        </Button>\n        <Icon style={{cursor: 'pointer', marginLeft: 8}} onClick={() => setEditing(false)}>close</Icon>\n      </div>\n    </div>\n  );\n  \n  return editing ? renderEditInput() : \n  (\n    <Draggable draggableId={cardId} index={index}>\n      {provided => (\n          <CardContainer ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n              <Card>\n                <EditButton fontSize=\"small\" onClick={() => {setEditing(true); setCardText(text)}}>edit</EditButton>\n                <DeleteButton fontSize=\"small\" onClick={handleDeleteCard}>delete</DeleteButton>\n                <CardContent>\n                  <Typography gutterBottom>{text}</Typography>\n                </CardContent>\n              </Card>  \n          </CardContainer>\n      )}\n    </Draggable>\n  );\n}\n\nexport default connect()(CardItem);","export const addCard = (text, listId) => ({\n    type: \"CARD_ADD\",\n    payload: { \n        text, \n        listId \n    }\n});\n\nexport const sortCard = (\n    droppableIdStart,\n    droppableIdEnd,\n    droppableIndexStart,\n    droppableIndexEnd\n) => ({\n    type: 'CARD_DRAGGED',\n    payload: {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexEnd,\n        droppableIndexStart\n    }\n});\n\nexport const deleteCard = (listId, cardId) => ({\n    type: 'CARD_DELETE',\n    payload: {\n        listId,\n        cardId\n    }\n});\n\nexport const editCard = (listId, cardId, text) => ({\n    type: 'CARD_EDIT',\n    payload: {\n        listId,\n        cardId,\n        text\n    }\n});","import React, { useState, useRef } from 'react';\nimport Icon from '@material-ui/core/Icon';\nimport { Card, Button } from '@material-ui/core';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport { connect } from 'react-redux';\nimport { addList } from '../../actions/listActions';\nimport { addCard } from '../../actions/cardsActions';\n\nconst AddElementForm = ({element, onBlur, dispatch, listId}) => {\n    \n    const buttonTitle = element === 'list' ? 'Add List' : 'Add Card';\n    const placeholder = element === 'list' ? 'Enter list title...' : 'Enter a title for this card...';\n\n    const [elementText, setElementText] = useState('');\n    const textareaRef = useRef(null);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (element === 'list') {\n            dispatch(addList(elementText));\n        } else if (element === 'card') {\n            dispatch(addCard(elementText, listId));\n        }\n        setElementText('');\n        textareaRef.current.blur();\n    }\n\n    return (\n        <div style={{paddingTop: 4}}>\n            <Card onBlur={onBlur} style={{\n                overflow: 'visible',\n                minHeight: element === 'card' ? 80 : 'none',\n                minWidth: 266,\n                padding: '6px 8px 2px'\n            }}>\n            <TextareaAutosize\n                placeholder={placeholder}\n                autoFocus\n                ref={textareaRef}\n                value={elementText}\n                onChange={e => setElementText(e.target.value)}\n                style={{\n                    resize: 'none',\n                    width: '100%',\n                    overflow: 'hidden',\n                    outline: 'none',\n                    border: 'none',\n                    fontSize: 15,\n                    fontWeight: element === 'list' && 600,\n                }}\n            />\n            </Card>\n            <div style={{marginTop: 8, display: 'flex', alignItems: 'center'}}>\n                <Button\n                    variant='contained'\n                    disabled={!!!elementText}\n                    onMouseDown={e => handleSubmit(e)}\n                    color='primary'\n                >\n                    {buttonTitle}\n                </Button>\n                <Icon style={{cursor: 'pointer', marginLeft: 8}} onClick={() => {textareaRef.current.blur()}}>close</Icon>\n            </div>\n        </div>\n    );\n}\n\nexport default connect()(AddElementForm);","export const addList = (title) => ({\n    type: \"LIST_ADD\",\n    payload: title\n});\n\nexport const sortList = (\n    droppableIdStart,\n    droppableIdEnd,\n    droppableIndexStart,\n    droppableIndexEnd\n) => ({\n    type: 'LIST_DRAGGED',\n    payload: {\n        droppableIdEnd,\n        droppableIdStart,\n        droppableIndexEnd,\n        droppableIndexStart\n    }\n});\n\nexport const deleteList = (listId) => ({\n    type: 'LIST_DELETE',\n    payload: { listId }\n});\n\nexport const editList = (listId, listTitle) => ({\n    type: 'LIST_EDIT',\n    payload: { listId, listTitle }\n});","import React, { useState } from 'react';\nimport Icon from '@material-ui/core/Icon';\nimport { Typography } from '@material-ui/core';\nimport AddElementForm from './AddElementForm';\nimport styled from 'styled-components';\n\nconst AddButtonContainer = styled.div`\n    display: flex;\n    background-color: inherit;\n    align-items: center;\n    cursor: pointer;\n    border-radius: 3px;\n    height: 36px;\n    width: 266px;\n    min-width: 266px;\n    padding-left: 10px;\n    &:hover {\n        background-color: lightgray;\n    }\n`;\n\nconst AddElementButton = ({element, listId}) => {\n\n    const [formOpen, setFormOpen] = useState(false);\n\n    const renderButton = () => (\n        <AddButtonContainer onClick={() => {setFormOpen(true)}}>\n            <Icon>add</Icon>\n            { element === 'list'\n                ? <Typography variant='h6'>Add a new {element}</Typography> \n                : <Typography>Add a new {element}</Typography>\n            }\n        </AddButtonContainer>\n    );\n    \n    return formOpen ? <AddElementForm listId={listId} element={element} onBlur={() => {setFormOpen(false)}}/> : renderButton();\n}\n\nexport default AddElementButton;","import React, { useState } from 'react';\nimport CardItem from './CardItem';\nimport AddElementButton from './common/AddElementButton';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport styled from 'styled-components';\nimport Icon from '@material-ui/core/Icon';\nimport { connect } from 'react-redux';\nimport { deleteList, editList } from '../actions/listActions';\nimport { Button, TextareaAutosize, Card, Typography } from '@material-ui/core';\n\n\nconst ListContainer = styled.div`\n    background-color: #dfe3e6;\n    border-radius: 4px;\n    width: 280px;\n    height: 100%;\n    padding: 10px;\n    margin-right: 8px;\n    box-shadow: 3px 3px 5px -2px black;\n`\nconst TitleContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    cursor: pointer;\n`;\n\nconst ListButton = styled(Icon)`\n    display: none;\n    margin-rigth: 50px;\n    transition: opacity 0.3s ease-in-out;\n    opacity: 0.2;\n    ${ListContainer}:hover & {\n        display: inline;\n        cursor: pointer;\n      }\n    &:hover {\n        opacity: 0.8;\n    }   \n`;\n\nconst List = ({title, cards, listId, index, dispatch}) => {\n    \n    const [editing, setEditing] = useState(false);\n    const [listTitle, setListTitle] = useState(title);\n\n    const handleDeleteList = () => {\n        dispatch(deleteList(listId));\n    }\n\n    const handleEdit = () => {\n        dispatch(editList(listId, listTitle));\n        setEditing(false);\n    }\n\n    const renderEditInput = () => (\n    <form style={{display: 'flex', justifyContent: 'space-between', paddingBottom: 8}}>\n        <Card style={{width: '55%', padding: '6px 8px 2px'}}>\n            <TextareaAutosize\n                style={{\n                    resize: 'none',\n                    overflow: 'hidden',\n                    outline: 'none',\n                    border: 'none',\n                    fontSize: 15,\n                    fontWeight: 600,\n                }}\n                value={listTitle}\n                onChange={(e) => {\n                    e.preventDefault();\n                    setListTitle(e.target.value)\n                }}\n                autoFocus\n                onBlur={() => {setEditing(false)}}\n            />\n        </Card>\n        <div style={{display: 'flex', justifyContent: 'space-around', alignItems: 'center'}}>\n            <Button\n                variant='contained' \n                color='primary'\n                onMouseDown={handleEdit}\n                disabled={!!!listTitle}\n                value='Save'\n            >\n                Save\n            </Button>\n            <Icon style={{cursor: 'pointer', marginLeft: 8}} onClick={() => {setEditing(false)}}>close</Icon>\n        </div>\n      </form>)\n    \n    return (\n        <Draggable draggableId={listId} index={index}>\n            {provided => (\n                <ListContainer {...provided.draggableProps} ref={provided.innerRef} {...provided.dragHandleProps}>\n                    <Droppable droppableId={listId} type='card'>\n                        {(provided) => (\n                            <div>\n                                {editing ? renderEditInput() : (\n                                    <TitleContainer>\n                                        <Typography variant='h6'>{title}</Typography>\n                                        <div>\n                                            <ListButton onClick={() => {setEditing(true)}}>edit</ListButton>\n                                            <ListButton onClick={handleDeleteList}>delete</ListButton>\n                                        </div>\n                                    </TitleContainer>\n                                )}\n                                <div {...provided.droppableProps} ref={provided.innerRef}>\n                                    {cards.map((card, index) => (\n                                        <CardItem \n                                            key={card.id} \n                                            text={card.text} \n                                            cardId={card.id} \n                                            index={index}\n                                            listId={listId}\n                                        />) )}\n                                    {provided.placeholder}\n                                    <div style={{marginTop: 8}}>\n                                        <AddElementButton listId={listId} element='card'/>\n                                    </div>\n                                </div>\n                            </div>\n                        )}\n                    </Droppable>\n                </ListContainer>\n            )}\n        </Draggable>\n    );\n}\n\nexport default connect()(List);","import React, { Fragment } from 'react';\nimport List from '../components/List';\nimport { connect } from \"react-redux\";\nimport AddElementButton from '../components/common/AddElementButton';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { sortCard } from '../actions/cardsActions';\nimport { sortList } from '../actions/listActions';\nimport styled from 'styled-components';\nimport { Typography } from '@material-ui/core';\n\nconst AllListContainer = styled.div`\n  display: flex;\n  height: 100%;\n`;\n\nconst App = ({board, dispatch}) => {\n  \n  const onDragEnd = (result) => {\n    const {destination, source, draggableId, type} = result;\n    \n    if (!destination) {\n      return;\n    }\n    \n    if (type === 'card') {\n      dispatch(sortCard(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId,\n      ));\n    } else if (type === 'list') {\n      dispatch(sortList(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId,\n      ));\n    }\n  }\n\n  return (\n    <Fragment>\n      <Typography \n        variant='h4' \n        style={{marginBottom: 20, marginLeft: 8, marginTop: 15, color: '#b3d6ee'}}\n      >\n        Kanban Board\n      </Typography>\n    <DragDropContext onDragEnd={onDragEnd}>\n        <Droppable droppableId='all-lists' type='list' direction='horizontal'>\n          {provided => (\n            <AllListContainer {...provided.droppableProps} ref={provided.innerRef}>\n              {board.map((list, index) => \n                <List \n                  key={list.id} \n                  listId={list.id} \n                  title={list.title} \n                  cards={list.cards} \n                  index={index}\n                />\n              )}\n              {provided.placeholder}\n                  <AddElementButton element='list'/>\n            </AllListContainer>\n          )}\n        </Droppable>\n    </DragDropContext>\n    </Fragment>\n  );\n}\n\nconst mapStateToProps = state => ({\n  board: state.board\n})\n\nexport default connect(mapStateToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { v4 as uuid } from 'uuid';\n\nconst initialState = [\n    {\n        title: \"To do\",\n        id: uuid(),\n        cards: []\n    },\n    {\n        title: \"In progress\",\n        id: uuid(),\n        cards: [\n            {\n            id: uuid(),\n            text: \"Code react applications\"\n            },\n            {\n                id: uuid(),\n                text: \"Debug react applications\"\n            }\n        ]\n    },\n    {\n    title: \"Reviewing\",\n        id: uuid(),\n        cards: []\n    },\n    {\n        title: \"Done\",\n        id: uuid(),\n        cards: []\n    }\n]\n\nconst boardReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case 'LIST_ADD': {\n            const newList = {\n                id: uuid(),\n                title: action.payload,\n                cards: []\n            }\n            \n            return [...state, newList];\n        }\n        case 'CARD_ADD': {\n            const newCard = {\n                id: uuid(),\n                text: action.payload.text\n            }\n            const newState = state.map(list => {\n                if (list.id === action.payload.listId) {\n                    return {\n                        ...list,\n                        cards: [...list.cards, newCard]\n                    }\n                } else {\n                    return list;\n                }\n            });\n\n            return newState;\n        }\n        case 'LIST_DRAGGED': {\n            const {\n                droppableIndexEnd,\n                droppableIndexStart,\n            } = action.payload;\n            const newState = [...state];\n            \n            const list = newState.splice(droppableIndexStart, 1);\n            newState.splice(droppableIndexEnd, 0, ...list);\n            \n            return newState;\n        }\n        case 'CARD_DRAGGED': {\n            const {\n                droppableIdStart,\n                droppableIdEnd,\n                droppableIndexEnd,\n                droppableIndexStart,\n            } = action.payload;\n            const newState = [...state];\n\n            if (droppableIdStart === droppableIdEnd) {\n                const list = state.find(list => list.id === droppableIdStart);\n                const card = list.cards.splice(droppableIndexStart, 1);\n                list.cards.splice(droppableIndexEnd, 0, ...card);\n            }\n            if (droppableIdStart !== droppableIdEnd) {\n                const startList = state.find(list => list.id === droppableIdStart);\n                const endList = state.find(list => list.id === droppableIdEnd);\n\n                const card = startList.cards.splice(droppableIndexStart, 1);\n                endList.cards.splice(droppableIndexEnd, 0, ...card);\n            }\n\n            return newState;\n        }\n        case 'CARD_DELETE': {\n            const newState = state.map(list => {\n                if (list.id === action.payload.listId) {\n                    return {\n                        ...list,\n                        cards: [...list.cards.filter(card => card.id !== action.payload.cardId)]\n                    }\n                } else {\n                    return list;\n                }\n            });\n\n            return newState;\n        }\n        case 'CARD_EDIT': {\n            const list = state.find(list => list.id === action.payload.listId);\n            const card = list.cards.find(card => card.id === action.payload.cardId);\n            card.text = action.payload.text;\n            list.cards =[...list.cards];\n\n            return [...state];\n        }\n        case 'LIST_DELETE': {\n            return [...state.filter(list => list.id !== action.payload.listId)];\n        }\n        case 'LIST_EDIT': {\n            const list = state.find(list => list.id === action.payload.listId);\n            list.title = action.payload.listTitle\n  \n            return [...state];\n        }\n        default: \n            return state;\n    }\n}\n\nexport default boardReducer;","import { createStore, combineReducers } from 'redux';\nimport boardReducer from '../reducers/boardReducer';\n\nconst loadState = () => {\n    try {\n      const serializedState = localStorage.getItem('state');\n      if (serializedState === null) {\n        return undefined;\n      }\n        return JSON.parse(serializedState);\n    } catch (error) {\n        console.log(error);\n        return undefined;\n    }\n}\n\nconst saveState = (state) => {\n    try {\n      const serializedState = JSON.stringify(state);\n      localStorage.setItem('state', serializedState);\n    } catch (error) {\n      console.log(error);\n    }\n}\n\nconst persistedState = loadState();\n\nexport default () => {\n    \n    const store = createStore(\n        combineReducers({\n            board: boardReducer,\n        }),persistedState ,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    );\n\n    store.subscribe(() => {\n        saveState({\n            board: store.getState().board\n        });\n    });\n\n    return store;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './layout/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport Store from './store/configureStore';\n\nconst store = Store();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}